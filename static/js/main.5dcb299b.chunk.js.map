{"version":3,"sources":["apis/giphy.js","components/Lyrics.js","components/Player.js","components/App.js","index.js","apis/spotifyAuth.js"],"names":["axios","create","baseURL","params","api_key","process","Lyrics","currentTrack","useState","currentLyrics","setCurrentLyrics","item","name","artists","useEffect","options","apiKey","title","artist","optimizeQuery","getLyrics","then","lyrics","className","Player","spotifyInstance","trackName","album","albumName","images","alt","src","url","map","i","length","onClick","skipToPrevious","err","data","console","error","xmlns","width","height","fill","viewBox","d","pause","seek","fillRule","play","skipToNext","App","spotifyApi","spotify","CLIENT_ID","redirect_uri","state","Math","random","toString","substr","signInUrl","queryString","window","location","search","code","URLSearchParams","get","setSpotifyInstance","setCurrentTrack","spotifyStatus","setSpotifyStatus","gifUrl","setGifUrl","spotifySetup","a","spotifyAuth","post","token","setAccessToken","access_token","getCurrentTrack","prevSongId","getMyCurrentPlayingTrack","id","setTimeout","getGifUrl","giphy","q","gif","floor","original","href","style","backgroundImage","ReactDOM","render","document","querySelector","headers","Authorization","Buffer","from"],"mappings":"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","file":"static/js/main.5dcb299b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api_key = process.env.REACT_APP_GIPHY_API_KEY;\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.giphy.com/v1/gifs\",\r\n  params: {\r\n    api_key,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getLyrics } from \"genius-lyrics-api\";\r\n\r\nconst Lyrics = ({ currentTrack }) => {\r\n  const [currentLyrics, setCurrentLyrics] = useState(\"LOADING\");\r\n  const { name, artists } = currentTrack.item;\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      apiKey: process.env.REACT_APP_GENIUS_API_KEY,\r\n      title: name,\r\n      artist: artists[0].name,\r\n      optimizeQuery: true,\r\n    };\r\n    getLyrics(options).then((lyrics) => {\r\n      setCurrentLyrics(lyrics);\r\n    });\r\n  }, [currentTrack]);\r\n\r\n  return currentLyrics === null ? (\r\n    <p>NO LYRICS AVAILABLE</p>\r\n  ) : (\r\n    <pre className=\"whitespace-pre-wrap\">{currentLyrics}</pre>\r\n  );\r\n};\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\r\n\r\nconst Player = ({ spotifyInstance, currentTrack }) => {\r\n  const { name: trackName, artists } = currentTrack.item;\r\n  const { name: albumName, images } = currentTrack.item.album;\r\n\r\n  const previous = () => {\r\n    spotifyInstance.skipToPrevious((err, data) => {\r\n      if (err) console.error(err);\r\n      else return;\r\n    });\r\n  };\r\n\r\n  const pause = () => {\r\n    spotifyInstance.pause((err, data) => {\r\n      if (err) console.error(err);\r\n      else return;\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    spotifyInstance.seek(0, (err, data) => {\r\n      if (err) console.error(err);\r\n      else return;\r\n    });\r\n  };\r\n\r\n  const play = () => {\r\n    spotifyInstance.play((err, data) => {\r\n      if (err) console.error(err);\r\n      else return;\r\n    });\r\n  };\r\n\r\n  const next = () => {\r\n    spotifyInstance.skipToNext((err, data) => {\r\n      if (err) console.error(err);\r\n      else return;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img className=\"m-auto rounded\" alt={albumName} src={images[0].url} />\r\n      <div className=\"text-center\">\r\n        {trackName}\r\n        <br />\r\n        {artists.map((artist, i) => {\r\n          if (i + 1 !== artists.length) return `${artist.name}, `;\r\n          else return `${artist.name}`;\r\n        })}\r\n        <br />\r\n        <div className=\"flex justify-center\">\r\n          <button\r\n            className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 border border-gray-700 rounded\"\r\n            onClick={() => previous()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-skip-backward-circle-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.79-2.907L8.5 7.028V5.5a.5.5 0 0 0-.79-.407L5 7.028V5.5a.5.5 0 0 0-1 0v5a.5.5 0 0 0 1 0V8.972l2.71 1.935a.5.5 0 0 0 .79-.407V8.972l2.71 1.935A.5.5 0 0 0 12 10.5v-5a.5.5 0 0 0-.79-.407z\" />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 border border-red-700 rounded\"\r\n            onClick={() => pause()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-pause-circle-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.25 5C5.56 5 5 5.56 5 6.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C7.5 5.56 6.94 5 6.25 5zm3.5 0c-.69 0-1.25.56-1.25 1.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C11 5.56 10.44 5 9.75 5z\" />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 border border-gray-700 rounded\"\r\n            onClick={() => reset()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-arrow-repeat\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\" />\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\r\n            onClick={() => play()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-play-circle-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 border border-gray-700 rounded\"\r\n            onClick={() => next()}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-skip-forward-circle-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.79 5.093A.5.5 0 0 0 4 5.5v5a.5.5 0 0 0 .79.407L7.5 8.972V10.5a.5.5 0 0 0 .79.407L11 8.972V10.5a.5.5 0 0 0 1 0v-5a.5.5 0 0 0-1 0v1.528L8.29 5.093a.5.5 0 0 0-.79.407v1.528L4.79 5.093z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-xs mb-4 mt-2 md:text-sm\">\r\n        <p className=\"font-bold\">How to Use:</p>\r\n        <p>\r\n          Use the above controls or select a song directly from the Spotify app\r\n          to get the corresponding lyrics\r\n          <br />\r\n          from Genius (lyrics may be inaccurate/missing for more obscure\r\n          songs).*\r\n        </p>\r\n        <br />\r\n        <p>\r\n          *Please wait a minimum of 10 seconds for song/lyrics to reflect new\r\n          song (Polling rate: once per 10s).\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport spotify from \"spotify-web-api-js\";\r\nimport giphy from \"../apis/giphy\";\r\nimport spotifyAuth from \"../apis/spotifyAuth\";\r\nimport Lyrics from \"./Lyrics\";\r\nimport Player from \"./Player\";\r\n\r\nconst App = () => {\r\n  const spotifyApi = new spotify();\r\n  const CLIENT_ID = process.env.REACT_APP_SPOTIFY_API_CLIENT_ID;\r\n  const CLIENT_SECRET = process.env.REACT_APP_SPOTIFY_API_CLIENT_SECRET;\r\n  const redirect_uri = \"https://dzrana.github.io/quick-lyrics/\";\r\n  const redirect_uri_local = \"http://localhost:3000/\";\r\n  const response_type = \"code\";\r\n  const scope =\r\n    \"user-read-playback-state user-modify-playback-state user-read-currently-playing app-remote-control streaming\";\r\n  const generateRandomString = () => {\r\n    return Math.random().toString(20).substr(2, 16);\r\n  };\r\n  const state = generateRandomString();\r\n  const signInUrl = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&scope=${scope}&redirect_uri=${redirect_uri}&state=${state}&response_type=${response_type}`;\r\n\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  const code = urlParams.get(\"code\");\r\n\r\n  const [spotifyInstance, setSpotifyInstance] = useState(null);\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n  const [spotifyStatus, setSpotifyStatus] = useState(false);\r\n\r\n  const [gifUrl, setGifUrl] = useState(null);\r\n\r\n  const spotifySetup = async () => {\r\n    const token = await spotifyAuth.post(\r\n      \"/api/token\",\r\n      `grant_type=authorization_code&code=${code}&redirect_uri=${redirect_uri}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n    );\r\n\r\n    spotifyApi.setAccessToken(token.data.access_token);\r\n    setSpotifyInstance(spotifyApi);\r\n\r\n    const getCurrentTrack = (prevSongId = \"\") => {\r\n      spotifyApi.getMyCurrentPlayingTrack((err, data) => {\r\n        if (err) console.error(err);\r\n        else {\r\n          if (data && data.item.id !== null) {\r\n            setSpotifyStatus(true);\r\n            if (prevSongId === \"\") {\r\n              setCurrentTrack(data);\r\n              getCurrentTrack(data.item.id);\r\n            } else {\r\n              setTimeout(() => {\r\n                if (prevSongId !== data.item.id) {\r\n                  setCurrentTrack(data);\r\n                  getCurrentTrack(data.item.id);\r\n                } else getCurrentTrack(data.item.id);\r\n              }, 10000);\r\n            }\r\n          } else setSpotifyStatus(false);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCurrentTrack();\r\n  };\r\n\r\n  const renderSignIn = () => {\r\n    return (\r\n      <div className=\"flex h-screen\">\r\n        <a\r\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded m-auto\"\r\n          href={signInUrl}\r\n        >\r\n          Sign In\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (code !== null) spotifySetup();\r\n  }, []);\r\n\r\n  const getGifUrl = async () => {\r\n    const gif = await giphy.get(\"/search\", {\r\n      params: {\r\n        q: \"anime aesthetic\",\r\n      },\r\n    });\r\n\r\n    setGifUrl(\r\n      gif.data.data[Math.floor(Math.random() * 50)].images.original.url\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGifUrl();\r\n  }, [currentTrack]);\r\n\r\n  return code === null ? (\r\n    renderSignIn()\r\n  ) : !spotifyStatus ? (\r\n    <div className=\"text-white flex h-screen whitespace-nowrap\">\r\n      <div className=\"m-auto\">\r\n        Open Spotify App, Play a Song, then{\" \"}\r\n        <a\r\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\r\n          href={redirect_uri}\r\n        >\r\n          Log Back In\r\n        </a>\r\n      </div>\r\n    </div>\r\n  ) : !currentTrack ? (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"m-auto\">LOADING</div>\r\n    </div>\r\n  ) : (\r\n    <div\r\n      className=\"text-white bg-cover bg-center\"\r\n      style={{\r\n        backgroundImage: `url(${gifUrl})`,\r\n      }}\r\n    >\r\n      <div className=\"md:flex md:relative bg-gray-800 bg-opacity-60\">\r\n        <aside className=\"md:h-screen md:sticky md:top-0 md:pl-24 md:pt-8 md:pr-24\">\r\n          <Player\r\n            spotifyInstance={spotifyInstance}\r\n            currentTrack={currentTrack}\r\n          />\r\n        </aside>\r\n        <main className=\"m-auto\">\r\n          <Lyrics currentTrack={currentTrack} />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","import axios from \"axios\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_SPOTIFY_API_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_SPOTIFY_API_CLIENT_SECRET;\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://accounts.spotify.com\",\r\n  headers: {\r\n    Authorization:\r\n      \"Basic \" +\r\n      Buffer.from(CLIENT_ID + \":\" + CLIENT_SECRET).toString(\"base64\"),\r\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  },\r\n});\r\n"],"sourceRoot":""}